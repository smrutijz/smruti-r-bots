{
  "name": "telegram_bot",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "*"
        ],
        "additionalFields": {}
      },
      "id": "c7d770d3-c34a-487a-8450-c33754f6de84",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        -2976,
        768
      ],
      "webhookId": "51942fbb-ca0e-4ec4-9423-5fcc7d3c4281",
      "typeVersion": 1,
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Error fallback for unsupported commands",
        "height": 271,
        "width": 336
      },
      "id": "883ec149-fe4a-41af-bfa6-6d7c8889200b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1248,
        1392
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "model_temperature",
              "value": 0.8
            },
            {
              "name": "token_length",
              "value": 500
            }
          ],
          "string": [
            {
              "name": "system_command",
              "value": "=ü§ñ SmrutiRBot ‚Äì System Prompt Role: You are SmrutiRBot ‚Äî a friendly, AI-powered assistant acting on behalf of Smruti (Sam) Ranjan Satpathy. Your primary goal is to offer helpful, respectful, and engaging support to all users.  Dynamic User Details User Name: {{ $json?.message?.from?.first_name }} User Language: {{ $json?.message?.from?.language_code }}  üéØ Behavior Guidelines: 1. Language Adaptation: - Detect the input language automatically. - Always respond in the same language to ensure a smooth, natural experience.  2. Friendly Tone: - Use warm, supportive, and respectful language. - Add relevant emojis (üëçüòäüéØüöÄ etc.) to keep conversations engaging and human-like.  3. Sensitive Topics: - Do not respond to requests related to:   - Sexual content   - Self-harm or harm to others   - Unsafe, illegal, or violent behavior  - Gently redirect or reply: \"I'm sorry, but I can't assist with that request. For help or further support, please message my human counterpart.\"  üß† Retrieval Rules for Smruti Ranjan Satpathy (Sam): You have internal memory and a vector store with detailed knowledge about Smruti Ranjan Satpathy, also known as Sam, Mr. Satpathy, or Mr. Smruti.  When the user asks about Sam or any variation of his name:  1. Always trigger the vector store to retrieve relevant context. 2. Summarize and present the response clearly and respectfully:   \"Here‚Äôs what I know from stored context: [summary] üòä\"  3. If no relevant data is found, say:   \"I‚Äôm not sure‚ÄîI don‚Äôt have that information. Would you like me to connect you with my human counterpart? ü§ù\" 4. Never retrieve information about anyone other than Smruti Ranjan Satpathy."
            },
            {
              "name": "bot_typing",
              "value": "={{ $json?.message?.text.startsWith('/image') ? \"upload_photo\" : \"typing\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f9584c6d-655d-4ca7-8506-78f17e8bc37d",
      "name": "Settings",
      "type": "n8n-nodes-base.set",
      "position": [
        -1664,
        608
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "## Chatbot mode by default\n### (when no command is provided)",
        "height": 541,
        "width": 931,
        "color": 4
      },
      "id": "a51611fb-0bb3-4f6f-a534-45bf5782f0d2",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        576,
        -416
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Welcome message\n### /start",
        "height": 219.892857142857,
        "width": 330.7863484403046
      },
      "id": "aaef8351-0973-4b66-850d-41540320a292",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -416,
        208
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "text": "={{ $('AI Agent').first().json.output }}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "dc4d7562-2ff8-4613-8dc5-6acac7bd3bf8",
      "name": "Text reply",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1632,
        -288
      ],
      "typeVersion": 1,
      "webhookId": "370944f5-9d22-4c16-aba4-aab81c46c95b",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "action": "={{ $json.bot_typing }}"
      },
      "id": "ed5006dc-ddaf-432b-85c4-f73d77b28aea",
      "name": "Send Typing action",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1440,
        768
      ],
      "typeVersion": 1,
      "webhookId": "2706a97b-978d-4e07-8883-5a71c2a81351",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "3aa6636b-3d88-49b6-8aeb-d2ca5c7f2973",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        -1232,
        624
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "content": "## Goodbye message\n### /end",
        "height": 233.8785714285713,
        "width": 329.7428571428562
      },
      "id": "76bd0c96-67a2-4239-afd3-861112cdd2e5",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -416,
        464
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "text": "=Sorry, {{ $('Telegram Trigger').first().json.message.from.first_name }}! This command is not supported yet.",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "6938fd8f-67ad-449e-8baa-5ee6b3399dee",
      "name": "Send error message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1120,
        1488
      ],
      "typeVersion": 1,
      "webhookId": "b3d9e569-30d7-44b6-9242-60ac09fc94e5",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "text": "=üö´ Sorry, {{ $('Telegram Trigger').first().json.message.from.first_name }}!\nYou‚Äôve reached your free query limit.",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "üëâ Click here to login",
                    "additionalFields": {
                      "url": "=https://wap-apac-oauth-oidc-flask-app-erebgyhba6bvhwak.southeastasia-01.azurewebsites.net/trigger?tid={{ $('Telegram Trigger').first().json.message.from.id }}"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "üëâ Contact Smruti (Sam) Satpathy",
                    "additionalFields": {
                      "url": "https://t.me/Smrutijz"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "7166560f-2053-4810-bc5f-c33b0d763754",
      "name": "Send OAuth message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        784,
        624
      ],
      "typeVersion": 1,
      "webhookId": "b3d9e569-30d7-44b6-9242-60ac09fc94e5",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "content": "## OAuth message to register for SSO",
        "height": 231.22373949579838,
        "width": 316.1071428571428
      },
      "id": "d7ebfd55-39c0-4a58-9d30-a05e4261aa59",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        688,
        528
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Merge').first().json.message.text }}",
        "options": {
          "systemMessage": "={{ $('Merge').first().json.system_command }}",
          "returnIntermediateSteps": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        656,
        -304
      ],
      "id": "e04a588d-0d25-4bdf-a594-1223e844453a",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "tableName": "smrutirbot_chat_histories",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        784,
        -48
      ],
      "id": "b3603a9c-1ab0-44a9-83e0-e3e3277c4bdd",
      "name": "Chat Memory",
      "credentials": {
        "postgres": {
          "id": "bQd3ej79e2ulYBEV",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-3.5-turbo",
          "mode": "list",
          "cachedResultName": "gpt-3.5-turbo"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        656,
        -48
      ],
      "id": "4a39c846-2d3c-4d26-8e03-44e661902fac",
      "name": "LLM",
      "credentials": {
        "openAiApi": {
          "id": "pr0KoGSOjfu5MKer",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Info message\n### /info",
        "height": 233.8785714285713,
        "width": 329.7428571428562
      },
      "id": "1bc154bc-65a1-4703-818d-2c743c2653e4",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -416,
        736
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "text": "=Hello {{ $('Telegram Trigger').first().json.message.from.first_name }}! üëã  \nI'm SmrutiRBot ‚Äî your friendly, AI-powered assistant here on behalf of Smruti (Sam) Satpathy.  \nHow can I help you today? üòä",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "a437c296-0406-4c50-b856-9c0551ab275c",
      "name": "Welcome Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -304,
        272
      ],
      "typeVersion": 1,
      "webhookId": "b3d9e569-30d7-44b6-9242-60ac09fc94e5",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "text": "=I‚Äôm SmrutiRBot ‚Äî here‚Äôs how I can assist you:\n\nü§ñ Ask me anything ‚Äî I handle a wide range of questions.\nüìö Get tips and guides ‚Äî on scheduling, reminders, resources.\nüîó Connect to Smruti (Sam) Satpathy when you need human support.\nüìã Use the menu anytime for options at your fingertips.\n\nWhat would you like to do next? üëá",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "d9b13b7e-0b7b-48a3-a9e9-346a92552e00",
      "name": "Info Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -304,
        832
      ],
      "typeVersion": 1,
      "webhookId": "b3d9e569-30d7-44b6-9242-60ac09fc94e5",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "text": "=üôè Thank you, {{ $('Telegram Trigger').first().json.message.from.first_name }}!  \nIt‚Äôs been a pleasure assisting you. If you have more questions, feel free to reach out anytime.\n",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "eeb61184-e322-4168-9e49-e5bc111efd50",
      "name": "End Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -288,
        528
      ],
      "typeVersion": 1,
      "webhookId": "b3d9e569-30d7-44b6-9242-60ac09fc94e5",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "mode": "expression",
        "numberOutputs": 7,
        "output": "={{ \n  $json.message?.text && !$json.message.text.startsWith('/') ? 0\n    : $json.message.text === '/start' ? 1\n    : $json.message.text === '/end' ? 2\n  : $json.message.text === '/info' ? 3\n  : $json.message.text === '/login' ? 4\n  : $json.message.text === '/talk2smruti' ? 5\n  : $json.message.text.startsWith('/') ? 6\n  : 0\n}}"
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1024,
        544
      ],
      "id": "bb73070a-b7b0-4bc5-842e-4fff1ffc536e",
      "name": "Menu vs Chat"
    },
    {
      "parameters": {
        "content": "## login message\n### /login",
        "height": 362,
        "width": 330
      },
      "id": "fb5273fc-75df-45de-b489-05cd4ca9a439",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -416,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "smrutirbot_chat_histories",
        "filters": {
          "conditions": [
            {
              "keyName": "session_id",
              "condition": "eq",
              "keyValue": "={{ $('Telegram Trigger').first().json.message.from.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -32,
        -32
      ],
      "id": "5ce3de53-7a02-48b3-85c0-8c5ded4f5f27",
      "name": "Get Num Execution Rows",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "IiY1S30uVrlibWt4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Count how many items have message.type === 'ai'\nconst aiCount = items.filter(\n  i => i.json?.message?.type === 'ai'\n).length;\n\n// Return the count in the output\nreturn [\n  {\n    json: {\n      aiCount,\n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        160,
        -32
      ],
      "id": "9fcfd745-1f6d-4002-a3c9-7afc18d418a0",
      "name": "Num Execution Check Code"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "user_logins",
        "filterType": "string",
        "filterString": "=token_exp=gt.{{ new Date().toISOString() }}&telegram_id=eq.{{ $('Telegram Trigger').first().json.message.from.id }}"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -832,
        1072
      ],
      "id": "2c7e6a63-239e-40b9-9bbd-0f2527087fd5",
      "name": "Get Auth User 2",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "IiY1S30uVrlibWt4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "user_logins",
        "filters": {
          "conditions": [
            {
              "keyName": "telegram_id",
              "condition": "eq",
              "keyValue": "={{ $('Telegram Trigger').first().json.message.from.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -720,
        256
      ],
      "id": "8dc0b33f-df47-4125-a664-7cf36da005d5",
      "name": "Get Auth User 1",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "IiY1S30uVrlibWt4",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Check if the previous node has output data\nconst hasLogedIn = items.length > 0 && Object.keys(items[0].json).length > 0;\n\nreturn [\n  {\n    json: {\n      hasLogedIn,\n    },\n  },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -688,
        1216
      ],
      "id": "621f633d-dcfc-4076-b894-e98702615fa0",
      "name": "Has Auth Check Code 2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aa62649c-6a17-4164-a527-77f13fafd82e",
              "leftValue": "={{ $json.hasLogedIn }}",
              "rightValue": 7949776784,
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -544,
        1376
      ],
      "id": "5a93fe19-0a03-4be4-95e6-8778e6db2e2f",
      "name": "Allow Auth User 2"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "text": "=üîê You‚Äôre about to log in.",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "üëâ Click here to login",
                    "additionalFields": {
                      "url": "=https://wap-apac-oauth-oidc-flask-app-erebgyhba6bvhwak.southeastasia-01.azurewebsites.net/trigger?tid={{ $('Telegram Trigger').first().json.message.from.id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "71179588-be10-4203-8b0d-1950814787b1",
      "name": "Login Message 1",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -288,
        1328
      ],
      "typeVersion": 1,
      "webhookId": "b3d9e569-30d7-44b6-9242-60ac09fc94e5",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "text": "=‚úÖ You‚Äôre already logged in!\nüîÑ Wanna log in again?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "üëâ Click here to login",
                    "additionalFields": {
                      "url": "=https://wap-apac-oauth-oidc-flask-app-erebgyhba6bvhwak.southeastasia-01.azurewebsites.net/trigger?tid={{ $('Telegram Trigger').first().json.message.from.id }}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "e56491d7-5bbf-4f8b-8b41-14ff83fa567b",
      "name": "Login Message 2",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -288,
        1488
      ],
      "typeVersion": 1,
      "webhookId": "b3d9e569-30d7-44b6-9242-60ac09fc94e5",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aa62649c-6a17-4164-a527-77f13fafd82e",
              "leftValue": "={{ $json.hasLogedIn }}",
              "rightValue": 7949776784,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -288,
        -304
      ],
      "id": "d014e7cd-9d31-4c8e-ab30-83a4eca3aefa",
      "name": "Allow Auth User 1"
    },
    {
      "parameters": {
        "jsCode": "// Check if the previous node has output data\nconst hasLogedIn = items.length > 0 && Object.keys(items[0].json).length > 0;\n\nreturn [\n  {\n    json: {\n      hasLogedIn,\n    },\n  },\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -512,
        0
      ],
      "id": "757f2eeb-f738-41cb-8291-fab794fae6e0",
      "name": "Has Auth Check Code 1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aa62649c-6a17-4164-a527-77f13fafd82e",
              "leftValue": "={{ $json.aiCount }}",
              "rightValue": 10,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        352,
        -32
      ],
      "id": "8cc3b9f7-a701-4c61-8545-0e59cc3c2e10",
      "name": "Allow UnAuth User 10 times"
    },
    {
      "parameters": {
        "content": "## connect Smruti\n### /connect-me",
        "height": 233.8785714285713,
        "width": 329.7428571428562
      },
      "id": "e3f8ad45-9075-41d1-ab63-32203e81eafa",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -416,
        1008
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').first().json.message.from.id }}",
        "text": "=üí¨ Want to talk to a human?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "üëâ Chat with Smruti (Sam) Satpathy",
                    "additionalFields": {
                      "url": "https://t.me/Smrutijz"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "d5e2437a-243b-43cc-9b0f-75354299c9e4",
      "name": "Info Message1",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -304,
        1104
      ],
      "typeVersion": 1,
      "webhookId": "b3d9e569-30d7-44b6-9242-60ac09fc94e5",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "description": "This tool can respond to any type of question, including casual conversation, open-ended discussion, and general knowledge queries. It should be executed by default for every user input, regardless of whether other specialized tools are triggered. Its role is to ensure there is always a response available, even when other tools provide their own outputs.",
        "workflowId": {
          "__rl": true,
          "value": "subp4pSaN9MJWw5I",
          "mode": "list",
          "cachedResultName": "general-qna-agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chat_id": "={{ $('Telegram Trigger').first().json.message.from.id }}",
            "user_message": "={{ $('Merge').first().json.message.text }}",
            "system_message": "={{ $('Merge').first().json.system_command }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "system_message",
              "displayName": "system_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1328,
        -48
      ],
      "id": "4855188b-76b2-4ca2-9461-29584d5ceffd",
      "name": "General Agent"
    },
    {
      "parameters": {
        "description": "Useful when you need to answer questions about Smruti Ranjan Satpathy ‚Äî also known as Smruti, Sam, or Mr. Satpathy. All these names refer to the same individual. Whenever you need insights into Smruti‚Äôs professional history, roles, projects, expertise, goals, or related background, always use this tool.",
        "workflowId": {
          "__rl": true,
          "value": "YR0HSuKx0U2qusuy",
          "mode": "list",
          "cachedResultName": "smruti-rag-agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "user_message": "={{ $('Merge').first().json.message.text }}",
            "system_message": "={{ $('Merge').first().json.system_command }}",
            "chat_id": "={{ $('Telegram Trigger').first().json.message.from.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "system_message",
              "displayName": "system_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1152,
        -48
      ],
      "id": "28e9f627-1a81-4a91-8d24-fc9caf10c54c",
      "name": "Smruti RAG Agent"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0cc846f0-4e3f-4569-b514-945554af32e0",
              "leftValue": "={{ $json.allIntermediateStepsPassed }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1232,
        -304
      ],
      "id": "be4a8256-f02f-4978-a1ba-e459eea72275",
      "name": "If Special Agent Executed"
    },
    {
      "parameters": {
        "jsCode": "function checkIntermediateSteps(data) {\n  if (!data.intermediateSteps || data.intermediateSteps.length === 0) {\n    return false;\n  }\n\n  return data.intermediateSteps.every(step => {\n    if (!step.observation) return false;\n    try {\n      const obs = JSON.parse(step.observation);\n      return obs.some(o => o.passedTool === true);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nconst items = $input.all();\nconst data = items[0].json;\n\nconst passed = checkIntermediateSteps(data);\n\nreturn [\n  {\n    json: {\n      allIntermediateStepsPassed: passed\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1024,
        -304
      ],
      "id": "c2f7264b-927b-4f56-b39e-32f4688136ee",
      "name": "Check Intermediate Tool Execution"
    },
    {
      "parameters": {
        "description": "When to use:\n\nIf a user requests to directly connect to Smruti, Sam, or Mr. Satpathy.\nExample:\nUser:\n‚ÄúCan you connect me to Smruti?‚Äù\nSmrutiRBot (Escalation Agent):\n\"Of course! For that, please message my human counterpart directly.\"\n\nIf the user asks sensitive, personal, or inappropriate questions that shouldn‚Äôt be answered by the bot.\n\nTone & Messaging Guidelines:\nSpeak on behalf of Smruti with confidence and respect.\n\nUse a firm but polite refusal and escalation:\nExamples:\n‚ÄúI‚Äôm here to assist you, but for that request, please message my human counterpart directly.‚Äù\n‚ÄúI‚Äôm sorry, but I can‚Äôt help with that here. Please reach out to my human counterpart if you‚Äôd like.‚Äù",
        "workflowId": {
          "__rl": true,
          "value": "1ml1eZci6e2GPFBz",
          "mode": "list",
          "cachedResultName": "chat-human-support-agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "system_message": "={{ $('Merge').first().json.system_command }}",
            "user_message": "={{ $('Merge').first().json.message.text }}",
            "chat_id": "={{ $('Telegram Trigger').first().json.message.from.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "system_message",
              "displayName": "system_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        944,
        -48
      ],
      "id": "95d06ec9-6d89-41d3-a225-e9cee3faaad0",
      "name": "Escalation Agent"
    },
    {
      "parameters": {
        "mode": "expression",
        "numberOutputs": 11,
        "output": "={{ \n  $json[\"message\"][\"text\"]   ? 0 :\n  $json[\"message\"][\"voice\"]  ? 1 :\n  $json[\"message\"][\"video_note\"] ? 2 :\n  $json[\"message\"][\"sticker\"] ? 3 :\n  $json[\"message\"][\"animation\"] ? 4 :\n  $json[\"message\"][\"photo\"]  ? 5 :\n  $json[\"message\"][\"video\"]  ? 6 :\n  $json[\"message\"][\"document\"] ? 7 :\n  $json[\"message\"][\"location\"] ? 8 :\n  $json[\"message\"][\"poll\"]   ? 9 :\n  10 // default/fallback index\n}}"
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2736,
        624
      ],
      "id": "19316ec8-459e-4912-a223-bcd4debee20d",
      "name": "Telegram Message Type Switch"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "message.text",
              "value": "={{ $('Audio - Transcribe').first().json.text }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "5866981a-91e3-4b36-ad2b-c557b396a136",
      "name": "Audio - PreProcessing",
      "type": "n8n-nodes-base.set",
      "position": [
        -1840,
        288
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2000,
        272
      ],
      "id": "72f59c56-f1b3-4e95-ac2e-7db131d9f60a",
      "name": "Audio - Transcribe",
      "credentials": {
        "openAiApi": {
          "id": "pr0KoGSOjfu5MKer",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2192,
        464
      ],
      "id": "d034086f-2651-49ff-a96b-e05a7fa0417c",
      "name": "Audio - Get a file",
      "webhookId": "305b4700-6981-4762-b3f4-fc3885b5d156",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "message.text",
              "value": "={{ $('Telegram Trigger').first().json.message.text || \"\" }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "abdf831d-bdc7-410d-8edb-9817e34c85b8",
      "name": "Text - PreProcessing",
      "type": "n8n-nodes-base.set",
      "position": [
        -1840,
        128
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.video_note.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2208,
        608
      ],
      "id": "e1e7d84e-6b56-4cd0-bda5-72f920e07003",
      "name": "VideoNote - Get a file",
      "webhookId": "305b4700-6981-4762-b3f4-fc3885b5d156",
      "credentials": {
        "telegramApi": {
          "id": "VrUN2BLxI7XzhxlX",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2000,
        448
      ],
      "id": "fcbc9617-bace-4509-8db9-d54a6a677ba3",
      "name": "VideoNote - Transcribe",
      "credentials": {
        "openAiApi": {
          "id": "pr0KoGSOjfu5MKer",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "message.text",
              "value": "=Now that you‚Äôve seen {{ $json.message.animation.file_name }}‚Äîthat was a rollercoaster of emotions! üòÇ Now, hit me with a sticker, animation, or emoji that matches the vibe. Let's keep this party going! üéâ"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "5da0c9f6-17c1-47d4-bcaa-189a2d561f91",
      "name": "Animation - PreProcessing",
      "type": "n8n-nodes-base.set",
      "position": [
        -1840,
        784
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "message.text",
              "value": "={{ $('VideoNote - Transcribe').first().json.text }}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "6d159dd1-612e-49e9-a8c7-530a9f648cb8",
      "name": "VideoNote - PreProcessing",
      "type": "n8n-nodes-base.set",
      "position": [
        -1840,
        448
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "message.text",
              "value": "=Now that you‚Äôve seen {{ $json.message.sticker.emoji }}‚Äîthat was a rollercoaster of emotions! üòÇ Now, hit me with a sticker, animation, or emoji that matches the vibe. Let's keep this party going! üéâ"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "8f3dd2b5-0c26-484b-8117-bef744c2f87b",
      "name": "Sticker - PreProcessing",
      "type": "n8n-nodes-base.set",
      "position": [
        -1840,
        624
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "message.text",
              "value": "=üìç Address: {{$json[\"results\"][0][\"formatted_address\"]}}\nüìç Coordinates: Latitude: {{ $(\"Telegram Trigger\").first().json[\"message\"][\"location\"][\"latitude\"]}}, Longitude: {{$(\"Telegram Trigger\").first().json[\"message\"][\"location\"][\"longitude\"]}}"
            }
          ]
        },
        "options": {
          "dotNotation": true
        }
      },
      "id": "e283f200-5b8a-4cc2-920c-07ef636b0f6d",
      "name": "Animation - PreProcessing1",
      "type": "n8n-nodes-base.set",
      "position": [
        -1840,
        1248
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "https://maps.googleapis.com/maps/api/geocode/json",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "latlng",
              "value": "={{$json[\"message\"][\"location\"][\"latitude\"]}},{{$json[\"message\"][\"location\"][\"longitude\"]}}"
            },
            {
              "name": "key",
              "value": "AIzaSyDcDoCIu0YBNnq3Hwo0AmJ728wTruCnTB4"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2032,
        1264
      ],
      "id": "1cb4666e-1c9a-40dc-9dbb-c4261bfa37dc",
      "name": "Reverse Geo Code - Google API"
    }
  ],
  "pinData": {},
  "connections": {
    "Merge": {
      "main": [
        [
          {
            "node": "Menu vs Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Settings": {
      "main": [
        [
          {
            "node": "Send Typing action",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Telegram Message Type Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Typing action": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Check Intermediate Tool Execution",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "LLM": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Menu vs Chat": {
      "main": [
        [
          {
            "node": "Get Auth User 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Welcome Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "End Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Info Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Auth User 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Info Message1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send error message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Num Execution Rows": {
      "main": [
        [
          {
            "node": "Num Execution Check Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Num Execution Check Code": {
      "main": [
        [
          {
            "node": "Allow UnAuth User 10 times",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Auth User 1": {
      "main": [
        [
          {
            "node": "Has Auth Check Code 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Auth User 2": {
      "main": [
        [
          {
            "node": "Has Auth Check Code 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Auth Check Code 2": {
      "main": [
        [
          {
            "node": "Allow Auth User 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Allow Auth User 2": {
      "main": [
        [
          {
            "node": "Login Message 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Login Message 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Allow Auth User 1": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Num Execution Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Auth Check Code 1": {
      "main": [
        [
          {
            "node": "Allow Auth User 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Allow UnAuth User 10 times": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send OAuth message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Smruti RAG Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "General Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If Special Agent Executed": {
      "main": [
        [],
        [
          {
            "node": "Text reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Intermediate Tool Execution": {
      "main": [
        [
          {
            "node": "If Special Agent Executed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Escalation Agent": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Message Type Switch": {
      "main": [
        [
          {
            "node": "Text - PreProcessing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Audio - Get a file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "VideoNote - Get a file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Sticker - PreProcessing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Animation - PreProcessing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send error message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send error message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send error message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Reverse Geo Code - Google API",
            "type": "main",
            "index": 0
          }
        ],
        [],
        []
      ]
    },
    "Audio - PreProcessing": {
      "main": [
        [
          {
            "node": "Settings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio - Transcribe": {
      "main": [
        [
          {
            "node": "Audio - PreProcessing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio - Get a file": {
      "main": [
        [
          {
            "node": "Audio - Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text - PreProcessing": {
      "main": [
        [
          {
            "node": "Settings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "VideoNote - Get a file": {
      "main": [
        [
          {
            "node": "VideoNote - Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "VideoNote - Transcribe": {
      "main": [
        [
          {
            "node": "VideoNote - PreProcessing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Animation - PreProcessing": {
      "main": [
        [
          {
            "node": "Settings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "VideoNote - PreProcessing": {
      "main": [
        [
          {
            "node": "Settings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sticker - PreProcessing": {
      "main": [
        [
          {
            "node": "Settings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Animation - PreProcessing1": {
      "main": [
        [
          {
            "node": "Settings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reverse Geo Code - Google API": {
      "main": [
        [
          {
            "node": "Animation - PreProcessing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "63d5b30c-7a12-41e8-b0f4-770750bac423",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "59c2324f4ea2ad5f70c34fef203bded6065d1b542555d863f4aed55ffc23ff64"
  },
  "id": "p1ytuuMM5Wc1ek1u",
  "tags": []
}